<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ckernel__sfpu__reshuffle__rows_8h" kind="file" language="C++">
    <compoundname>ckernel_sfpu_reshuffle_rows.h</compoundname>
    <includes local="yes">ckernel_addrmod.h</includes>
    <includes local="yes">ckernel_instr_params.h</includes>
    <includes local="yes">sfpi.h</includes>
    <includedby refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__sfpu_8h" local="yes">tt_llk_wormhole_b0/common/inc/ckernel_sfpu.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>ckernel_addrmod.h</label>
      </node>
      <node id="3">
        <label>ckernel_instr_params.h</label>
      </node>
      <node id="1">
        <label>tt_llk_wormhole_b0/common/inc/sfpu/ckernel_sfpu_reshuffle_rows.h</label>
        <link refid="ckernel__sfpu__reshuffle__rows_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sfpi.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>tt_llk_wormhole_b0/common/inc/sfpu/ckernel_sfpu_reshuffle_rows.h</label>
        <link refid="ckernel__sfpu__reshuffle__rows_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tt_llk_wormhole_b0/common/inc/ckernel_sfpi.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__sfpi_8h"/>
      </node>
      <node id="2">
        <label>tt_llk_wormhole_b0/common/inc/ckernel_sfpu.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__sfpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tt_llk_wormhole_b0/common/inc/cmath_common.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2cmath__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceckernel">ckernel</innernamespace>
    <innernamespace refid="namespaceckernel_1_1sfpu">ckernel::sfpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2025<sp/>Tenstorrent<sp/>AI<sp/>ULC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_addrmod.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_instr_params.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sfpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel" kindref="compound">ckernel</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sfpu</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>APPROXIMATION_MODE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ITERATIONS&gt;</highlight></codeline>
<codeline lineno="17" refid="namespaceckernel_1_1sfpu_1afcfc51817f92e501a2871fdfd5f40275" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1sfpu_1afcfc51817f92e501a2871fdfd5f40275" kindref="member">_calculate_reshuffle_rows_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>idx_addr)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>output_tile_offset<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clr<sp/>DEST<sp/>tile<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>(Radomir):<sp/>Add<sp/>optional<sp/>clear<sp/>that<sp/>is<sp/>more<sp/>optimal<sp/>using<sp/>tile<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(uint<sp/>row=0;<sp/>row<sp/>&lt;<sp/>32;<sp/>row+=4)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>TT_SFPSTORE(p_sfpu::LCONST_0,<sp/>0,<sp/>ADDR_MOD_3,<sp/>output_tile_offset<sp/>+<sp/>row);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>TT_SFPSTORE(p_sfpu::LCONST_0,<sp/>0,<sp/>ADDR_MOD_3,<sp/>output_tile_offset<sp/>+<sp/>row<sp/>+<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>TT_SFPSTORE(p_sfpu::LCONST_0,<sp/>0,<sp/>ADDR_MOD_3,<sp/>output_tile_offset<sp/>+<sp/>row<sp/>+<sp/>32);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>TT_SFPSTORE(p_sfpu::LCONST_0,<sp/>0,<sp/>ADDR_MOD_3,<sp/>output_tile_offset<sp/>+<sp/>row<sp/>+<sp/>34);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>tt_l1_ptr<sp/>uint8_t<sp/>*idx_ptr<sp/><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">volatile<sp/></highlight><highlight class="normal">tt_l1_ptr<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx_addr<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>4));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>input_lreg[4]<sp/><sp/>=<sp/>{<ref refid="structckernel_1_1p__sfpu_1acab55b64504d9944b811e2fa792daeff" kindref="member">p_sfpu::LREG0</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1ab1d54f1a6f1987af99dc385eb2a0442d" kindref="member">p_sfpu::LREG1</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1adced8f3b9b5eb95ea39975bcd8e0bab7" kindref="member">p_sfpu::LREG2</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1aa0f33c600e9cae536edfa02c17925bc4" kindref="member">p_sfpu::LREG3</ref>};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>output_lreg[4]<sp/>=<sp/>{<ref refid="structckernel_1_1p__sfpu_1ad4869de329508d66504d4f8e9ddee484" kindref="member">p_sfpu::LREG4</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1a26acc2a93265661b178da74a23e5592c" kindref="member">p_sfpu::LREG5</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1aef7f57d04018766d79183a49baf00a8c" kindref="member">p_sfpu::LREG6</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1ab107ccffd361dc67fab45610e6648e48" kindref="member">p_sfpu::LREG7</ref>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>32;<sp/>row++)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>input_row_addr<sp/>=<sp/>(row<sp/>&lt;<sp/>16)<sp/>?<sp/>((row<sp/>/<sp/>4)<sp/>*<sp/>4)<sp/>:<sp/>((row<sp/>/<sp/>4)<sp/>*<sp/>4<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>input_row_lreg<sp/>=<sp/>input_lreg[row<sp/>%<sp/>4];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>dst_row<sp/>=<sp/>(uint)idx_ptr[row];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_row<sp/>&gt;=<sp/>32)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>output_row_addr<sp/>=<sp/>(dst_row<sp/>&lt;<sp/>16)<sp/>?<sp/>((dst_row<sp/>/<sp/>4)<sp/>*<sp/>4)<sp/>:<sp/>((dst_row<sp/>/<sp/>4)<sp/>*<sp/>4<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>output_row_lreg<sp/>=<sp/>output_lreg[dst_row<sp/>%<sp/>4];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>in<sp/>the<sp/>input<sp/>row<sp/>and<sp/>output<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1acab55b64504d9944b811e2fa792daeff" kindref="member">p_sfpu::LREG0</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>input_row_addr);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1ab1d54f1a6f1987af99dc385eb2a0442d" kindref="member">p_sfpu::LREG1</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>input_row_addr<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1adced8f3b9b5eb95ea39975bcd8e0bab7" kindref="member">p_sfpu::LREG2</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>input_row_addr<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1aa0f33c600e9cae536edfa02c17925bc4" kindref="member">p_sfpu::LREG3</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>input_row_addr<sp/>+<sp/>18);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1ad4869de329508d66504d4f8e9ddee484" kindref="member">p_sfpu::LREG4</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1a26acc2a93265661b178da74a23e5592c" kindref="member">p_sfpu::LREG5</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1aef7f57d04018766d79183a49baf00a8c" kindref="member">p_sfpu::LREG6</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ac69f01c77dfa22b6c0c865d9b5793409" kindref="member">TT_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1ab107ccffd361dc67fab45610e6648e48" kindref="member">p_sfpu::LREG7</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr<sp/>+<sp/>18);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aae73c1479d2c4b5ed14e2510736f5abe" kindref="member">TTI_SFPTRANSP</ref>(0,<sp/>0,<sp/>0,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>puts<sp/>desired<sp/>input<sp/>row<sp/>into<sp/>LREG<sp/>&quot;input_row_lreg&quot;<sp/>and<sp/>output<sp/>row<sp/>into<sp/>&quot;output_row_lreg&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>the<sp/>values<sp/>in<sp/>the<sp/>input<sp/>row<sp/>and<sp/>output<sp/>row<sp/>by<sp/>addition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aafed6f47e288e3772741f9441b97e1df" kindref="member">TT_SFPADD</ref>(input_row_lreg,<sp/><ref refid="structckernel_1_1p__sfpu_1a13ca26b072d019fe9ba9205bda581ff1" kindref="member">p_sfpu::LCONST_1</ref>,<sp/>output_row_lreg,<sp/>output_row_lreg,<sp/>0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a479dda632494697607e270ca1c13f721" kindref="member">TTI_SFPNOP</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>back<sp/>the<sp/>reduce<sp/>rows<sp/>to<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aae73c1479d2c4b5ed14e2510736f5abe" kindref="member">TTI_SFPTRANSP</ref>(0,<sp/>0,<sp/>0,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>puts<sp/>desired<sp/>output<sp/>row<sp/>back<sp/>into<sp/>into<sp/>LREG4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a28db0b14d008bb4cc74a2dba62b0646b" kindref="member">TT_SFPSTORE</ref>(<ref refid="structckernel_1_1p__sfpu_1ad4869de329508d66504d4f8e9ddee484" kindref="member">p_sfpu::LREG4</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a28db0b14d008bb4cc74a2dba62b0646b" kindref="member">TT_SFPSTORE</ref>(<ref refid="structckernel_1_1p__sfpu_1a26acc2a93265661b178da74a23e5592c" kindref="member">p_sfpu::LREG5</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a28db0b14d008bb4cc74a2dba62b0646b" kindref="member">TT_SFPSTORE</ref>(<ref refid="structckernel_1_1p__sfpu_1aef7f57d04018766d79183a49baf00a8c" kindref="member">p_sfpu::LREG6</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a28db0b14d008bb4cc74a2dba62b0646b" kindref="member">TT_SFPSTORE</ref>(<ref refid="structckernel_1_1p__sfpu_1ab107ccffd361dc67fab45610e6648e48" kindref="member">p_sfpu::LREG7</ref>,<sp/>0,<sp/><ref refid="namespaceckernel_1a05f4d4b4bc7c28a851063e49768311c9" kindref="member">ADDR_MOD_3</ref>,<sp/>output_tile_offset<sp/>+<sp/>output_row_addr<sp/>+<sp/>18);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sfpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ckernel</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_llk_wormhole_b0/common/inc/sfpu/ckernel_sfpu_reshuffle_rows.h"/>
  </compounddef>
</doxygen>
