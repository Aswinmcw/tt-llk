<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h" kind="file" language="C++">
    <compoundname>llk_unpack_tilize.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="yes">ckernel.h</includes>
    <includes local="yes">ckernel_defs.h</includes>
    <includes local="yes">ckernel_globals.h</includes>
    <includes local="yes">ckernel_ops.h</includes>
    <includes local="yes">ckernel_template.h</includes>
    <includes local="yes">cunpack_common.h</includes>
    <incdepgraph>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>ckernel_defs.h</label>
      </node>
      <node id="1">
        <label>tt_llk_blackhole/llk_lib/llk_unpack_tilize.h</label>
        <link refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cunpack_common.h</label>
      </node>
      <node id="7">
        <label>ckernel_template.h</label>
      </node>
      <node id="3">
        <label>ckernel.h</label>
      </node>
      <node id="5">
        <label>ckernel_globals.h</label>
      </node>
      <node id="6">
        <label>ckernel_ops.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a1f013e56b1e8ddc34b717d58d521d281" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _llk_unpack_tilize_mop_config_</definition>
        <argsstring>(const bool narrow_tile=false)</argsstring>
        <name>_llk_unpack_tilize_mop_config_</name>
        <param>
          <type>const bool</type>
          <declname>narrow_tile</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" line="19" column="13" bodyfile="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" bodystart="19" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a2d50d12ec8f9260a9c13d8c83f71f0ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>is_fp32_dest_acc_en</declname>
            <defname>is_fp32_dest_acc_en</defname>
            <defval>false</defval>
          </param>
          <param>
            <type><ref refid="namespaceckernel_1af54694b63325ef3aa20ba271e4a271ba" kindref="member">StochRndType</ref></type>
            <declname>stoch_rnd_mode</declname>
            <defname>stoch_rnd_mode</defname>
            <defval>StochRndType::None</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void _llk_unpack_tilize_hw_configure_</definition>
        <argsstring>(const std::uint32_t unpack_src_format, const std::uint32_t unpack_dst_format, const std::uint32_t face_r_dim=FACE_R_DIM, const std::uint32_t within_face_16x16_transpose=0, const std::uint32_t num_faces=4)</argsstring>
        <name>_llk_unpack_tilize_hw_configure_</name>
        <param>
          <type>const std::uint32_t</type>
          <declname>unpack_src_format</declname>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>unpack_dst_format</declname>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>face_r_dim</declname>
          <defval>FACE_R_DIM</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>within_face_16x16_transpose</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>num_faces</declname>
          <defval>4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" line="39" column="13" bodyfile="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" bodystart="39" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1acfeeac0644e2b911276bb8312ba26b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _llk_unpack_tilize_init_</definition>
        <argsstring>(const std::uint32_t unpack_src_format=0, const std::uint32_t unpack_dst_format=0, const std::uint32_t ct_dim=0, const std::uint32_t face_r_dim=FACE_R_DIM, const bool narrow_tile=false)</argsstring>
        <name>_llk_unpack_tilize_init_</name>
        <param>
          <type>const std::uint32_t</type>
          <declname>unpack_src_format</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>unpack_dst_format</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>ct_dim</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>face_r_dim</declname>
          <defval>FACE_R_DIM</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>narrow_tile</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" line="55" column="13" bodyfile="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" bodystart="55" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a8d3272a4ec7701e1325cc601b4a5cf27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _llk_unpack_tilize_</definition>
        <argsstring>(const std::uint32_t base_address, const std::uint32_t tile_index, std::uint32_t unpack_src_format=0, std::uint32_t block_ct_dim=0, const std::uint32_t face_r_dim=FACE_R_DIM, const std::uint32_t num_faces=4, const bool narrow_tile=false)</argsstring>
        <name>_llk_unpack_tilize_</name>
        <param>
          <type>const std::uint32_t</type>
          <declname>base_address</declname>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>tile_index</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>unpack_src_format</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>block_ct_dim</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>face_r_dim</declname>
          <defval>FACE_R_DIM</defval>
        </param>
        <param>
          <type>const std::uint32_t</type>
          <declname>num_faces</declname>
          <defval>4</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>narrow_tile</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" line="98" column="13" bodyfile="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h" bodystart="98" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2025<sp/>Tenstorrent<sp/>AI<sp/>ULC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_defs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_globals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_ops.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_template.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cunpack_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel" kindref="compound">ckernel</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel_1_1unpacker" kindref="compound">ckernel::unpacker</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a1f013e56b1e8ddc34b717d58d521d281" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a1f013e56b1e8ddc34b717d58d521d281" kindref="member">_llk_unpack_tilize_mop_config_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>narrow_tile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SKIP_UNP<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>unpack_srca<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1af462e63a19a2e6421ef5d12f7e7db4a1" kindref="member">TT_OP_NOP</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>unpack_srcb_zerosrc<sp/><sp/><sp/><sp/>=<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1af462e63a19a2e6421ef5d12f7e7db4a1" kindref="member">TT_OP_NOP</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>unpack_srcb_set_dvalid<sp/>=<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1af462e63a19a2e6421ef5d12f7e7db4a1" kindref="member">TT_OP_NOP</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>unpack_srca<sp/>=</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ad724a1d1a672e04931567339338ce16f" kindref="member">TT_OP_UNPACR</ref>(<ref refid="namespaceckernel_1a879d5154a2972baa9f455bf1980e5edda85becaa2f53dbf50b609a09c545f2ba8" kindref="member">SrcA</ref>,<sp/>0b1<sp/></highlight><highlight class="comment">/*Z<sp/>inc*/</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0,<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>OvrdThreadId*/</highlight><highlight class="normal">,<sp/>1<sp/></highlight><highlight class="comment">/*Set<sp/>Dvalid*/</highlight><highlight class="normal">,<sp/><ref refid="structckernel_1_1p__unpacr_1aad37fb40a1348b3e0538f207f5ea324a" kindref="member">p_unpacr::RAREFYB_DISABLE</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint<sp/>unpack_srcb_set_dvalid<sp/>=<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a36db2af17c3390d38bd9e83eed13e208" kindref="member">TT_OP_UNPACR_NOP</ref>(<ref refid="namespaceckernel_1a879d5154a2972baa9f455bf1980e5edda956db99c8849c15529ae20135f6e0d26" kindref="member">SrcB</ref>,<sp/>0,<sp/>0,<sp/><ref refid="structckernel_1_1p__unpacr__nop_1a106bdd092732167375296d4ee20febd9" kindref="member">p_unpacr_nop::SET_DVALID</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="structckernel_1_1p__unpacr__nop_1a5769c24388c615d50357701b826ef8bf" kindref="member">p_unpacr_nop::UNP_ZEROSRC</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>outerloop<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint32_t<sp/>innerloop<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classckernel_1_1ckernel__template" kindref="compound">ckernel_template</ref><sp/>tmp(outerloop,<sp/>innerloop,<sp/>unpack_srcb_set_dvalid);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classckernel_1_1ckernel__template_1aa31db9db125154fb329a0182c240078c" kindref="member">set_start_op</ref>(unpack_srca);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classckernel_1_1ckernel__template_1a3b91c3688a20652ab9e379348effb2e5" kindref="member">program</ref>(<ref refid="namespaceckernel_1a2d69fb46f1972c372d8a89775ef780e3" kindref="member">instrn_buffer</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_fp32_dest_acc_en<sp/>=<sp/>false,<sp/>StochRndType<sp/>stoch_rnd_mode<sp/>=<sp/>StochRndType::None&gt;</highlight></codeline>
<codeline lineno="39" refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a2d50d12ec8f9260a9c13d8c83f71f0ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a2d50d12ec8f9260a9c13d8c83f71f0ef" kindref="member">_llk_unpack_tilize_hw_configure_</ref>(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>unpack_src_format,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>unpack_dst_format,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>face_r_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref>,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>within_face_16x16_transpose<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>num_faces<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_row_pool<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stoch_rnd_en<sp/>=<sp/>(stoch_rnd_mode<sp/>==<sp/><ref refid="namespaceckernel_1af54694b63325ef3aa20ba271e4a271baab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member">StochRndType::All</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpu_srnd_en<sp/><sp/>=<sp/>stoch_rnd_en<sp/>||<sp/>(stoch_rnd_mode<sp/>==<sp/><ref refid="namespaceckernel_1af54694b63325ef3aa20ba271e4a271baa332456e2efbb4ce23188022084a37a74" kindref="member">StochRndType::Fpu</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pack_srnd_en<sp/>=<sp/>stoch_rnd_en<sp/>||<sp/>(stoch_rnd_mode<sp/>==<sp/><ref refid="namespaceckernel_1af54694b63325ef3aa20ba271e4a271baa4492081ca02b059f9e8af4ddaf0f7292" kindref="member">StochRndType::Pack</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>configure_unpack_AB&lt;is_row_pool,<sp/>is_fp32_dest_acc_en,<sp/>fpu_srnd_en,<sp/>pack_srnd_en&gt;(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpack_src_format,<sp/>unpack_src_format,<sp/>unpack_dst_format,<sp/>unpack_dst_format,<sp/>face_r_dim,<sp/>face_r_dim,<sp/>within_face_16x16_transpose,<sp/>num_faces,<sp/>num_faces);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1acfeeac0644e2b911276bb8312ba26b17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1acfeeac0644e2b911276bb8312ba26b17" kindref="member">_llk_unpack_tilize_init_</ref>(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>unpack_src_format<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>unpack_dst_format<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>ct_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>face_r_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>narrow_tile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG2_Haloize_mode_RMW&gt;(0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>block_c_dim<sp/>=<sp/>ct_dim<sp/>*<sp/>(narrow_tile<sp/>?<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>:<sp/><ref refid="namespaceckernel_1ac4fa00dce38ec376efbb86281e0a101e" kindref="member">TILE_C_DIM</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>face<sp/>dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aa624cd9d79108ba4e30706a474e471fb" kindref="member">TT_SETADCXX</ref>(<ref refid="structckernel_1_1p__setadc_1a89f4c22eb8b45e69b00fbf8d5d49986a" kindref="member">p_setadc::UNP_A</ref>,<sp/>face_r_dim<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>default<sp/>settings<sp/>to<sp/>enable<sp/>tilize<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionckernel_1_1unpacker_1_1unpack__config__u" kindref="compound">unpack_config_u</ref><sp/>config<sp/><sp/><sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="unionckernel_1_1unpacker_1_1unpack__config__u_1a7f4a9868b1e65e777d3fa8a11e51f114" kindref="member">f</ref>.<ref refid="structckernel_1_1unpacker_1_1unpack__config__t_1ae4f11dc900d32406d069791825da5d5c" kindref="member">out_data_format</ref><sp/>=<sp/>unpack_dst_format;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="unionckernel_1_1unpacker_1_1unpack__config__u_1a7f4a9868b1e65e777d3fa8a11e51f114" kindref="member">f</ref>.<ref refid="structckernel_1_1unpacker_1_1unpack__config__t_1af05e25b49f31653f9ccfd2e07754d772" kindref="member">throttle_mode</ref><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="unionckernel_1_1unpacker_1_1unpack__config__u_1a7f4a9868b1e65e777d3fa8a11e51f114" kindref="member">f</ref>.<ref refid="structckernel_1_1unpacker_1_1unpack__config__t_1a1cb1a5fb86286fcbbfe0d97781f02365" kindref="member">tileize_mode</ref><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="unionckernel_1_1unpacker_1_1unpack__config__u_1a7f4a9868b1e65e777d3fa8a11e51f114" kindref="member">f</ref>.<ref refid="structckernel_1_1unpacker_1_1unpack__config__t_1afdb68b528e4f562e3cde016de3f8dfa6" kindref="member">shift_amount</ref><sp/><sp/><sp/><sp/>=<sp/>(SCALE_DATUM_SIZE(unpack_src_format,<sp/>block_c_dim))<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ada10e7d8a7be1a4ecc2feb5ba33efb1c" kindref="member">TT_SETDMAREG</ref>(0,<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__defs_8h_1ac078c789c14b3457323aab60b0ebf214" kindref="member">LOWER_HALFWORD</ref>(config.<ref refid="unionckernel_1_1unpacker_1_1unpack__config__u_1a289bc72bac6f58588325e833f5248c20" kindref="member">val</ref>[0]),<sp/>0,<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__defs_8h_1a0fcd79ea7df2880c1cc3cf49f861188c" kindref="member">LO_16</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a5f3ea799ff51f118dd0efde17e3d6864" kindref="member">p_gpr_unpack::TMP0</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ada10e7d8a7be1a4ecc2feb5ba33efb1c" kindref="member">TT_SETDMAREG</ref>(0,<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__defs_8h_1abd1d3808327aaccd8e33a401cca17ab1" kindref="member">UPPER_HALFWORD</ref>(config.<ref refid="unionckernel_1_1unpacker_1_1unpack__config__u_1a289bc72bac6f58588325e833f5248c20" kindref="member">val</ref>[0]),<sp/>0,<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__defs_8h_1aec97cd00a10543f8348d20daedde9de4" kindref="member">HI_16</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a5f3ea799ff51f118dd0efde17e3d6864" kindref="member">p_gpr_unpack::TMP0</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5e93e576b2f490f899e1e9c33cd13d22" kindref="member">TTI_STALLWAIT</ref>(<ref refid="structckernel_1_1p__stall_1abba99fafeb3d6142ed7b4cda721b9e22" kindref="member">p_stall::STALL_CFG</ref>,<sp/><ref refid="structckernel_1_1p__stall_1a36ebcdc5e5af85ad72ee57d972c5f5c6" kindref="member">p_stall::THCON</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a5f3ea799ff51f118dd0efde17e3d6864" kindref="member">p_gpr_unpack::TMP0</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>THCON_SEC0_REG2_Out_data_format_ADDR32);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TTI_REG2FLOP(1,0,0,0,THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32-THCON_CFGREG_BASE_ADDR32,<sp/>p_gpr_unpack::FACE_DIM_1x16);<sp/>//GPR<sp/>preloaded<sp/>with<sp/><sp/>16<sp/>|<sp/>(16<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>is<sp/>the<sp/>configuration<sp/>for<sp/>64-row<sp/>unpack<sp/>for<sp/>srca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>Tile_x_dim<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>Tile_z_dim<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32,<sp/>0,<sp/>0xffffffff&gt;(Tile_x_dim<sp/>|<sp/>(Tile_x_dim<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>x-dim<sp/>to<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG0_TileDescriptor_ADDR32,<sp/>0,<sp/>0xffff0000&gt;(0<sp/>|<sp/>(Tile_x_dim<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>z-dim<sp/>to<sp/>1<sp/>as<sp/>X<sp/>dim<sp/>is<sp/>set<sp/>to<sp/>cover<sp/>the<sp/>entire<sp/>tile,<sp/>so<sp/>no<sp/>need<sp/>to<sp/>iterate<sp/>over<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG0_TileDescriptor_ADDR32<sp/>+<sp/>1,<sp/>0,<sp/>0xffff0000&gt;(0<sp/>|<sp/>(Tile_z_dim<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>x-end<sp/>for<sp/>Unpackers<sp/>to<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a37087d7f9d32a02c0708d252d06d872d" kindref="member">TTI_SETADCXX</ref>(<ref refid="structckernel_1_1p__setadc_1a40d1a608f79aaf84f6ccf465ba18e6b8" kindref="member">p_setadc::UNP0</ref>,<sp/>1023,<sp/>0x0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a1f013e56b1e8ddc34b717d58d521d281" kindref="member">_llk_unpack_tilize_mop_config_</ref>(narrow_tile);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a8d3272a4ec7701e1325cc601b4a5cf27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tt__llk__blackhole_2llk__lib_2llk__unpack__tilize_8h_1a8d3272a4ec7701e1325cc601b4a5cf27" kindref="member">_llk_unpack_tilize_</ref>(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>base_address,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>tile_index,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint32_t<sp/>unpack_src_format<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint32_t<sp/>block_ct_dim<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>face_r_dim<sp/><sp/>=<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>num_faces<sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>narrow_tile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg<sp/>=<sp/><ref refid="namespaceckernel_1a07f2f679f32de3ec88a11ef180abef27" kindref="member">get_cfg_pointer</ref>();<sp/></highlight><highlight class="comment">//<sp/>get<sp/>pointer<sp/>to<sp/>registers<sp/>for<sp/>current<sp/>state<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint32_t<sp/>top_face_offset_address<sp/>=<sp/>SCALE_DATUM_SIZE(unpack_src_format,<sp/>tile_index)<sp/>&lt;&lt;<sp/>(narrow_tile<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>iteration<sp/>unpacks<sp/>2<sp/>face_r_dimx16<sp/>faces<sp/>(1st<sp/>0,1<sp/>2nd<sp/>2,3<sp/>unless<sp/>tile<sp/>is<sp/>&lt;=16x32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>narrow<sp/>tile<sp/>we<sp/>unpack<sp/>1<sp/>face<sp/>in<sp/>each<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>address<sp/>is<sp/>in<sp/>16B<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Datum<sp/>count<sp/>=<sp/>tile_index*face_r_dim<sp/>(/16<sp/>to<sp/>get<sp/>word<sp/>count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>block_c_dim_16B<sp/><sp/><sp/>=<sp/>block_ct_dim<sp/>*<sp/>(narrow_tile<sp/>?<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>/<sp/>16<sp/>:<sp/><ref refid="namespaceckernel_1ac4fa00dce38ec376efbb86281e0a101e" kindref="member">TILE_C_DIM</ref><sp/>/<sp/>16);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint32_t<sp/>bot_face_offset_address<sp/>=<sp/>SCALE_DATUM_SIZE(unpack_src_format,<sp/>face_r_dim<sp/>*<sp/>block_c_dim_16B);<sp/></highlight><highlight class="comment">//*N<sp/>rows<sp/>/<sp/>16<sp/>to<sp/>get<sp/>16B<sp/>word<sp/>aligned<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Program<sp/>srcA<sp/>and<sp/>srcB<sp/>base<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>MT:<sp/>This<sp/>should<sp/>be<sp/>revisited<sp/>for<sp/>narrow<sp/>tiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::uint32_t<sp/>num_loops<sp/>=<sp/>narrow_tile<sp/>?<sp/>2<sp/>:<sp/>num_faces/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint32_t<sp/>address<sp/>=<sp/>base_address<sp/>+<sp/>top_face_offset_address;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>z/w<sp/>start<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a8063a6111ac22adc0f94b3ca5acdb61c" kindref="member">TTI_SETADCZW</ref>(0b001,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0b1111);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>free<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1_1unpacker_1a77b36a3adbe2119aacfea22bae6783ea" kindref="member">wait_for_next_context</ref>(2);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>tile<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg[THCON_SEC0_REG3_Base_address_ADDR32]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg[THCON_SEC0_REG3_Base_cntx1_address_ADDR32]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trisc::SEMPOST<sp/>for<sp/>context<sp/>acquire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1ae16714cb61d79748381173d9f134afc2" kindref="member">semaphore_post</ref>(<ref refid="structckernel_1_1semaphore_1ae6026566f2685e3b447fab2d8594a4d3" kindref="member">semaphore::UNPACK_SYNC</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stall<sp/>unpacker<sp/>until<sp/>pending<sp/>CFG<sp/>writes<sp/>from<sp/>Trisc<sp/>have<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5e93e576b2f490f899e1e9c33cd13d22" kindref="member">TTI_STALLWAIT</ref>(<ref refid="structckernel_1_1p__stall_1af117197b36df7b8570530d42047858a8" kindref="member">p_stall::STALL_UNPACK</ref>,<sp/><ref refid="structckernel_1_1p__stall_1a26b86b5ecb1d64e03d755b693d4cf957" kindref="member">p_stall::TRISC_CFG</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>MOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classckernel_1_1ckernel__template_1abef3e894a0d41dc257c3e1e836ed2971" kindref="member">ckernel::ckernel_template::run</ref>(<ref refid="namespaceckernel_1a2d69fb46f1972c372d8a89775ef780e3" kindref="member">instrn_buffer</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T6::SEMGET<sp/>for<sp/>context<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a41a3215be2be6d39b403d112d71d0c10" kindref="member">t6_semaphore_get</ref>(<ref refid="structckernel_1_1semaphore_1ae6026566f2685e3b447fab2d8594a4d3" kindref="member">semaphore::UNPACK_SYNC</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>unpacker<sp/>config<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1_1unpacker_1a8306dc71629a0dd7e9bfb91ca5932ac0" kindref="member">switch_config_context</ref>(<ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PERF_DUMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>first_unpack_recorded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tt_llk_blackhole/llk_lib/llk_unpack_tilize.h"/>
  </compounddef>
</doxygen>
