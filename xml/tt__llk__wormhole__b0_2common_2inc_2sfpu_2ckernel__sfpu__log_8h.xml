<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tt__llk__wormhole__b0_2common_2inc_2sfpu_2ckernel__sfpu__log_8h" kind="file" language="C++">
    <compoundname>ckernel_sfpu_log.h</compoundname>
    <includes local="yes">sfpi.h</includes>
    <includes local="yes">sfpi_fp16.h</includes>
    <includedby refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__sfpu_8h" local="yes">tt_llk_wormhole_b0/common/inc/ckernel_sfpu.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>sfpi_fp16.h</label>
      </node>
      <node id="1">
        <label>tt_llk_wormhole_b0/common/inc/sfpu/ckernel_sfpu_log.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2sfpu_2ckernel__sfpu__log_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sfpi.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>tt_llk_wormhole_b0/common/inc/sfpu/ckernel_sfpu_log.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2sfpu_2ckernel__sfpu__log_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tt_llk_wormhole_b0/common/inc/ckernel_sfpi.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__sfpi_8h"/>
      </node>
      <node id="2">
        <label>tt_llk_wormhole_b0/common/inc/ckernel_sfpu.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__sfpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tt_llk_wormhole_b0/common/inc/cmath_common.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2cmath__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceckernel">ckernel</innernamespace>
    <innernamespace refid="namespaceckernel_1_1sfpu">ckernel::sfpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2025<sp/>Tenstorrent<sp/>AI<sp/>ULC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sfpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sfpi_fp16.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel" kindref="compound">ckernel</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sfpu</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HAS_BASE_SCALING&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">sfpi_inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1sfpu_1a76b4b1341d32da7d8587c55b2211c7c8" kindref="member">_calculate_log_body_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>log_base_scale_factor)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>From<sp/>dest<sp/>+<sp/>&quot;normalize<sp/>to<sp/>calculation<sp/>range&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>in<sp/>=<sp/>sfpi::dst_reg[0];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>x<sp/><sp/>=<sp/>setexp(in,<sp/>127);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>exp<sp/>to<sp/>exp<sp/>bias<sp/>(put<sp/>in<sp/>range<sp/>of<sp/>1-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXXXXX<sp/>ask<sp/>Namal?<sp/>if<sp/>we<sp/>can<sp/>derive<sp/>the<sp/>coefficients<sp/>below<sp/>to<sp/>higher<sp/>precision</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Cheby<sp/>Approximation<sp/>using<sp/>Horner<sp/>Form<sp/>Multiplication:<sp/>3rd<sp/>Order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x*<sp/>(<sp/>x*<sp/>(A*x<sp/>+<sp/>B)<sp/>+<sp/>C)<sp/>+<sp/>D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>:0.1058,<sp/>B:<sp/>-0.3942,<sp/>C:<sp/>0.9813,<sp/>D:<sp/>0.006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>above<sp/>on<sp/>(x-1)<sp/>so<sp/>x<sp/>is<sp/>in<sp/>ln(x+1),<sp/>plug<sp/>(x-1<sp/>into<sp/>equation<sp/>above<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>subtract<sp/>and<sp/>get<sp/>A&apos;,B&apos;,C&apos;,D&apos;):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A&apos;<sp/>=<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B&apos;<sp/>=<sp/>-3A<sp/>+<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C&apos;<sp/>=<sp/>3a<sp/>-2B<sp/>+<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D&apos;<sp/>=<sp/>-A<sp/>+<sp/>B<sp/>-<sp/>C<sp/>+<sp/>D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A&apos;:0.1058,<sp/>B&apos;:-0.7116,<sp/>C&apos;:2.0871,<sp/>D&apos;:-1.4753</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>a<sp/>=<sp/>sfpi::vConstFloatPrgm1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>b<sp/>=<sp/>sfpi::vConstFloatPrgm2;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXXXX<sp/>try<sp/>variants<sp/>of<sp/>the<sp/>below:<sp/>B&apos;=.7122,<sp/>C&apos;=2.0869</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>series_result<sp/>=<sp/>x<sp/>*<sp/>(x<sp/>*<sp/>(x<sp/>*<sp/>a<sp/>+<sp/>b)<sp/>+<sp/>2.0871)<sp/>+<sp/>-1.4753f;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>exponent<sp/>to<sp/>float</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vInt<sp/>exp<sp/>=<sp/>exexp(in);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>v_if<sp/>(exp<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp<sp/>=<sp/>sfpi::setsgn(~exp<sp/>+<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>v_endif;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>expf<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>int32_to_float(exp,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>vConstLn2<sp/>=<sp/>sfpi::vConstFloatPrgm0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vFloat<sp/>result<sp/><sp/><sp/><sp/>=<sp/>expf<sp/>*<sp/>vConstLn2<sp/>+<sp/>series_result;<sp/></highlight><highlight class="comment">//<sp/>exp<sp/>correction:<sp/>ln(1+x)<sp/>+<sp/>exp*ln(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(HAS_BASE_SCALING)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>*=<sp/>sfpi::s2vFloat16a(log_base_scale_factor);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>case<sp/>when<sp/>input<sp/>is<sp/>0.<sp/>ln(0)<sp/>=<sp/>-inf</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>v_if<sp/>(in<sp/>==<sp/>0.0F)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reload<sp/>for<sp/>register<sp/>pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-std::numeric_limits&lt;float&gt;::infinity();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>v_endif;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::dst_reg[0]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>APPROXIMATION_MODE,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HAS_BASE_SCALING,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ITERATIONS&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1sfpu_1ac825f680e12991c8516d35f2d8bafa3a" kindref="member">_calculate_log_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations,<sp/>uint<sp/>log_base_scale_factor)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>unroll<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>iterations;<sp/>d++)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_calculate_log_body_&lt;HAS_BASE_SCALING&gt;(log_base_scale_factor);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfpi::dst_reg++;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>APPROXIMATION_MODE&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1sfpu_1ac2ea3269579d72fe10081f124127ae7f" kindref="member">_init_log_</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vConstFloatPrgm0<sp/>=<sp/>0.692871f;<sp/></highlight><highlight class="comment">//<sp/>ln2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXXXX<sp/>could<sp/>do<sp/>these<sp/>to<sp/>higher<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vConstFloatPrgm1<sp/>=<sp/>0.1058f;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>sfpi::vConstFloatPrgm2<sp/>=<sp/>-0.7166f;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sfpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ckernel</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_llk_wormhole_b0/common/inc/sfpu/ckernel_sfpu_log.h"/>
  </compounddef>
</doxygen>
