<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tt__llk__wormhole__b0_2common_2inc_2cunpack__common_8h" kind="file" language="C++">
    <compoundname>cunpack_common.h</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cstdint</includes>
    <includes refid="tt__llk__wormhole__b0_2common_2inc_2ckernel_8h" local="yes">ckernel.h</includes>
    <includes refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__globals_8h" local="yes">ckernel_globals.h</includes>
    <incdepgraph>
      <node id="10">
        <label>cfg_defines.h</label>
      </node>
      <node id="17">
        <label>fw_debug.h</label>
      </node>
      <node id="9">
        <label>ckernel_addrmod.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__addrmod_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>ckernel_instr_params.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__instr__params_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>llk_defs.h</label>
      </node>
      <node id="6">
        <label>tensix.h</label>
      </node>
      <node id="4">
        <label>ckernel.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ckernel_gpr_map.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__gpr__map_8h"/>
      </node>
      <node id="18">
        <label>ckernel_globals.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ckernel_defs.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__defs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="14">
        <label>tensix_types.h</label>
      </node>
      <node id="7">
        <label>risc_attribs.h</label>
      </node>
      <node id="16">
        <label>ckernel_structs.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__structs_8h"/>
      </node>
      <node id="1">
        <label>tt_llk_wormhole_b0/common/inc/cunpack_common.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2cunpack__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ckernel_include.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__include_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ckernel_ops.h</label>
        <link refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__ops_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structckernel_1_1unpacker_1_1unpack__tile__descriptor__t" prot="public">ckernel::unpacker::unpack_tile_descriptor_t</innerclass>
    <innerclass refid="unionckernel_1_1unpacker_1_1unpack__tile__descriptor__u" prot="public">ckernel::unpacker::unpack_tile_descriptor_u</innerclass>
    <innerclass refid="structckernel_1_1unpacker_1_1unpack__config__t" prot="public">ckernel::unpacker::unpack_config_t</innerclass>
    <innerclass refid="unionckernel_1_1unpacker_1_1unpack__config__u" prot="public">ckernel::unpacker::unpack_config_u</innerclass>
    <innerclass refid="structckernel_1_1unpacker_1_1alu__config__t" prot="public">ckernel::unpacker::alu_config_t</innerclass>
    <innerclass refid="unionckernel_1_1unpacker_1_1alu__config__u" prot="public">ckernel::unpacker::alu_config_u</innerclass>
    <innernamespace refid="namespaceckernel">ckernel</innernamespace>
    <innernamespace refid="namespaceckernel_1_1unpacker">ckernel::unpacker</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2025<sp/>Tenstorrent<sp/>AI<sp/>ULC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tt__llk__wormhole__b0_2common_2inc_2ckernel_8h" kindref="compound">ckernel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tt__llk__wormhole__b0_2common_2inc_2ckernel__globals_8h" kindref="compound">ckernel_globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PERF_DUMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;perf_res_decouple.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel_1_1unpacker" kindref="compound">ckernel::unpacker</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespaceckernel_1_1unpacker_1a852bf48fc41cd1f9fc95ba0c5cb327c3" kindref="member">TILE_DESC_SIZE</ref><sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Unpacker<sp/>descriptor<sp/>size<sp/>in<sp/>dwords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespaceckernel_1_1unpacker_1ad5954b3ef39d2586a634f51a038af643" kindref="member">CONFIG_SIZE</ref><sp/><sp/><sp/><sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Unpacker<sp/>configuration<sp/>size<sp/>in<sp/>dwords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespaceckernel_1_1unpacker_1a48ecd61a0cad3db6981e38b1e2243d2a" kindref="member">NUM_UNPACKERS</ref><sp/><sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>unpackers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unpack<sp/>tile<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>in_data_format<sp/><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>uncompressed<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blobs_per_xy_plane<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>y_dim<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>z_dim<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>w_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blobs_y_start_lo<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blobs_y_start_hi<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>digest_type<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>digest_size<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/>unpack_tile_descriptor_t;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unpack<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unpack_tile_descriptor_t)<sp/>==<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>val[4];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack_tile_descriptor_t<sp/>f;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/>unpack_tile_descriptor_u;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unpack<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>out_data_format<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>throttle_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>context_count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>haloize_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>controls<sp/>xy<sp/>transpose<sp/>on<sp/>unpacker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tileize_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>unpack_src_reg_set_update<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>unpack_if_sel<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>upsample_rate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>upsamle_and_interlave<sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>shift_amount<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>uncompress_cntx0_3<sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>unpack_if_sel_cntx0_3<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>force_shared_exp<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>7;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>uncompress_cntx4_7<sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>unpack_if_sel_cntx4_7<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>limit_addr<sp/>:<sp/>17;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_4<sp/>:<sp/>15;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fifo_size<sp/><sp/>:<sp/>17;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_5<sp/>:<sp/>15;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/>unpack_config_t;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unpack_config_t)<sp/>==<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>val[4];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack_config_t<sp/>f;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/>unpack_config_u;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ALU<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ROUNDING_MODE_Fpu_srnd_en<sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ROUNDING_MODE_Gasket_srnd_en<sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ROUNDING_MODE_Packer_srnd_en<sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ROUNDING_MODE_Padding<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>10;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ROUNDING_MODE_GS_LF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ROUNDING_MODE_Bfp8_HF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_FORMAT_SPEC_REG0_SrcAUnsigned<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_FORMAT_SPEC_REG0_SrcBUnsigned<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_FORMAT_SPEC_REG0_SrcA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_FORMAT_SPEC_REG1_SrcB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_FORMAT_SPEC_REG2_Dstacc<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ACC_CTRL_Fp32_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ACC_CTRL_SFPU_Fp32_enabled<sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ALU_ACC_CTRL_INT8_math_enabled<sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/>alu_config_t;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(alu_config_t)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_config_t<sp/>f;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/>alu_config_u;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>unpacker<sp/>offsets<sp/>to<sp/>0,<sp/>except<sp/>for<sp/>unpacker<sp/>0,<sp/>channel<sp/>1,<sp/>X,<sp/>which<sp/>is<sp/>the<sp/>tile<sp/>X<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1ae416ef838f536bf7b82c1b6f4a53df0e" kindref="member">unpacker_addr_counter_init</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a13bbd76b585634ed75abaea4318cbc24" kindref="member">TTI_SETADCXY</ref>(0b011,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0b1011);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a8063a6111ac22adc0f94b3ca5acdb61c" kindref="member">TTI_SETADCZW</ref>(0b011,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0b1111);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a300fcfac6b4c6f50523a6d91ca61cbba" kindref="member">unpacker_iteration_cleanup</ref>(uint<sp/>&amp;context)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>that<sp/>unpacker<sp/>is<sp/>done,<sp/>and<sp/>we<sp/>can<sp/>program<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a41a3215be2be6d39b403d112d71d0c10" kindref="member">t6_semaphore_get</ref>(<ref refid="structckernel_1_1semaphore_1ae6026566f2685e3b447fab2d8594a4d3" kindref="member">semaphore::UNPACK_SYNC</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>context<sp/>=<sp/>1<sp/>-<sp/>context;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32,<sp/>0x0104);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32,<sp/>0x0000);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a00fa08a893659caf5e6f38fd8f457824" kindref="member">unpacker_wrapup</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>unpacker0<sp/>tile<sp/>offset<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr_1a28d8f49d352fa33234133be2d70e215d" kindref="member">p_gpr::ZERO</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>THCON_SEC0_REG7_Offset_address_ADDR32);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr_1a28d8f49d352fa33234133be2d70e215d" kindref="member">p_gpr::ZERO</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>THCON_SEC0_REG7_Offset_cntx1_address_ADDR32);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>unpacker1<sp/>tile<sp/>offset<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr_1a28d8f49d352fa33234133be2d70e215d" kindref="member">p_gpr::ZERO</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>THCON_SEC1_REG7_Offset_address_ADDR32);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr_1a28d8f49d352fa33234133be2d70e215d" kindref="member">p_gpr::ZERO</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>THCON_SEC1_REG7_Offset_cntx1_address_ADDR32);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>context<sp/>offset<sp/>and<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32,<sp/>0x1010);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="namespaceckernel_1_1unpacker_1a84ee2f15ec6fdc25e679d5725f41eda4" kindref="member">unpack_16B_address</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>addr)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(addr<sp/>&lt;&lt;<sp/>FIFO_BASE_ADDRESS_ALIGN_BITS)<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a411f5461da0f41c0337f12fe14da7261" kindref="member">flush_xsearch_cache</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpacker)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a7148cbaa12c38d1227b42e2317a67183" kindref="member">TTI_UNPACR</ref>(unpacker,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="structckernel_1_1p__unpacr_1aad37fb40a1348b3e0538f207f5ea324a" kindref="member">p_unpacr::RAREFYB_DISABLE</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>threshold<sp/>of<sp/>busy<sp/>contexts<sp/>to<sp/>fall<sp/>below<sp/>total<sp/>available<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a77b36a3adbe2119aacfea22bae6783ea" kindref="member">wait_for_next_context</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>num_contexts)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespaceckernel_1aa440ebb8f4010cbfd33f6a52660968d2" kindref="member">semaphore_read</ref>(<ref refid="structckernel_1_1semaphore_1ae6026566f2685e3b447fab2d8594a4d3" kindref="member">semaphore::UNPACK_SYNC</ref>)<sp/>&gt;=<sp/>num_contexts)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a8306dc71629a0dd7e9bfb91ca5932ac0" kindref="member">switch_config_context</ref>(uint<sp/>&amp;<ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>config<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref><sp/>=<sp/>1<sp/>-<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32,<sp/>0x0000);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32,<sp/>0x0101);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a8b5c8845e7511cc758476b70631ca0fa" kindref="member">reset_config_context</ref>()</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>config<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__globals_8h_1ad599359d106464c9e12c1f131540a1c0" kindref="member">unp_cfg_context</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32,<sp/>0x0000);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sync<sp/>on<sp/>unpacker<sp/>idle<sp/>via<sp/>waiting<sp/>busy<sp/>contexts<sp/>counter<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1afb29c2b09196d9193e5fb695d65ee6b5" kindref="member">wait_for_idle</ref>()</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespaceckernel_1aa440ebb8f4010cbfd33f6a52660968d2" kindref="member">semaphore_read</ref>(<ref refid="structckernel_1_1semaphore_1ae6026566f2685e3b447fab2d8594a4d3" kindref="member">semaphore::UNPACK_SYNC</ref>)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a1d6f26900e4dc1a4766d9d39d60cb74f" kindref="member">enable_int8_fpu_math</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_config_u<sp/>alu_payload<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{.val<sp/>=<sp/>0};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_payload.f.ALU_ACC_CTRL_INT8_math_enabled<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;ALU_FORMAT_SPEC_REG0_SrcA_ADDR32,<sp/>0,<sp/>ALU_ACC_CTRL_INT8_math_enabled_MASK&gt;(alu_payload.val);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>row_pool<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_fp32_dest_acc_en<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpu_srnd_en<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pack_srnd_en<sp/>=<sp/>false,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disable_src_zero_flag<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a2a2c94eccb63b04fbd53f860b0c5c294" kindref="member">configure_unpack_AB</ref>(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpA_src_format,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpB_src_format,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpA_dst_format,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpB_dst_format,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpA_face_r_dim<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref>,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpB_face_r_dim<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref>,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transpose_xy_srca_en<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpA_num_faces<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>unpB_num_faces<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>unpacker<sp/>is<sp/>done<sp/>(all<sp/>contexts<sp/>freed<sp/>up)<sp/>before<sp/>starting<sp/>hw<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1_1unpacker_1afb29c2b09196d9193e5fb695d65ee6b5" kindref="member">wait_for_idle</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>address<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1_1unpacker_1ae416ef838f536bf7b82c1b6f4a53df0e" kindref="member">unpacker_addr_counter_init</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>pointer<sp/>to<sp/>registers<sp/>for<sp/>current<sp/>state<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg<sp/>=<sp/><ref refid="namespaceckernel_1a07f2f679f32de3ec88a11ef180abef27" kindref="member">get_cfg_pointer</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpA_ch1_x_stride<sp/>=<sp/>(uint)(unpA_dst_format<sp/>&amp;<sp/>0x3)<sp/>==<sp/>(uint)DataFormat::Float32<sp/><sp/><sp/>?<sp/>4</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(uint)(unpA_dst_format<sp/>&amp;<sp/>0x3)<sp/>==<sp/>(uint)DataFormat::Float16<sp/>?<sp/>2</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpB_ch1_x_stride<sp/>=<sp/>(uint)(unpB_dst_format<sp/>&amp;<sp/>0x3)<sp/>==<sp/>(uint)DataFormat::Float32<sp/><sp/><sp/>?<sp/>4</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(uint)(unpB_dst_format<sp/>&amp;<sp/>0x3)<sp/>==<sp/>(uint)DataFormat::Float16<sp/>?<sp/>2</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpA_ch1_z_stride<sp/>=<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>*<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref><sp/>*<sp/>unpA_ch1_x_stride;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpB_ch1_z_stride<sp/>=<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>*<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref><sp/>*<sp/>unpB_ch1_x_stride;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>exp_width<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>((uint)unpA_dst_format<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x1;<sp/></highlight><highlight class="comment">//<sp/>0=5-bit,<sp/>1=8-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strides<sp/>for<sp/>incrementing<sp/>ch1<sp/>address<sp/>to<sp/>srcA<sp/>and<sp/>srcB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg[UNP0_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32]<sp/>=</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0<sp/>&lt;&lt;<sp/>UNP0_ADDR_CTRL_ZW_REG_1_Wstride_SHAMT)<sp/>|</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unpA_ch1_z_stride<sp/>&lt;&lt;<sp/>UNP0_ADDR_CTRL_ZW_REG_1_Zstride_SHAMT);<sp/></highlight><highlight class="comment">//<sp/>Z<sp/>and<sp/>W(not<sp/>used)<sp/>stride<sp/>for<sp/>dest<sp/>address<sp/>(ch1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg[UNP1_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32]<sp/>=</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0<sp/>&lt;&lt;<sp/>UNP1_ADDR_CTRL_ZW_REG_1_Wstride_SHAMT)<sp/>|</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unpB_ch1_z_stride<sp/>&lt;&lt;<sp/>UNP1_ADDR_CTRL_ZW_REG_1_Zstride_SHAMT);<sp/></highlight><highlight class="comment">//<sp/>Z<sp/>and<sp/>W(not<sp/>used)<sp/>stride<sp/>for<sp/>dest<sp/>address<sp/>(ch1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Math<sp/>ALU_FORMAT_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1abaa990c7ce0dcbe5acfd0c5f633538df" kindref="member">t6_mutex_acquire</ref>(<ref refid="structckernel_1_1mutex_1a2e6185a2bb30d967f295a00e1661753d" kindref="member">mutex::REG_RMW</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>alu_src_format<sp/>=<sp/>(0x0<sp/>&lt;&lt;<sp/>ALU_FORMAT_SPEC_REG_SrcA_val_SHAMT);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>mask0<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(ALU_FORMAT_SPEC_REG_Dstacc_override_SHAMT<sp/>+<sp/>1))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;ALU_FORMAT_SPEC_REG_SrcA_val_ADDR32,<sp/>ALU_FORMAT_SPEC_REG_SrcA_val_SHAMT,<sp/>mask0&gt;(alu_src_format);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_config_u<sp/>alu_payload<sp/>=<sp/>{.val<sp/>=<sp/>0};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fp32_dest_acc_en<sp/><sp/>=<sp/>(is_fp32_dest_acc_en)<sp/>?<sp/>(1)<sp/>:<sp/>(0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>int8_math_enabled<sp/>=<sp/>((uint)(unpA_dst_format<sp/>&amp;<sp/>0xF)<sp/>==<sp/>(uint)DataFormat::Int8)<sp/>||<sp/>((uint)(unpB_dst_format<sp/>&amp;<sp/>0xF)<sp/>==<sp/>(uint)DataFormat::Int8)<sp/>||</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint)unpA_dst_format<sp/>==<sp/>(uint)DataFormat::Int32)<sp/>||<sp/>((uint)unpB_dst_format<sp/>==<sp/>(uint)DataFormat::Int32);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>alu_format_mask<sp/>=<sp/>ALU_FORMAT_SPEC_REG0_SrcAUnsigned_MASK<sp/>|<sp/>ALU_FORMAT_SPEC_REG0_SrcBUnsigned_MASK;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uint)unpA_src_format<sp/>==<sp/>(uint)DataFormat::UInt8)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alu_payload.f.ALU_FORMAT_SPEC_REG0_SrcAUnsigned<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uint)unpB_src_format<sp/>==<sp/>(uint)DataFormat::UInt8)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alu_payload.f.ALU_FORMAT_SPEC_REG0_SrcBUnsigned<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FP32<sp/>accumulation<sp/>and<sp/>SFPU<sp/>to<sp/>read<sp/>dest<sp/>as<sp/>FP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>assumes<sp/>these<sp/>config<sp/>fields<sp/>are<sp/>adjacent<sp/>and<sp/>in<sp/>same<sp/>register!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(ALU_ACC_CTRL_Fp32_enabled_ADDR32<sp/>==<sp/>ALU_FORMAT_SPEC_REG0_SrcA_ADDR32);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(ALU_ACC_CTRL_Fp32_enabled_ADDR32<sp/>==<sp/>ALU_ACC_CTRL_SFPU_Fp32_enabled_ADDR32);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>alu_dest_format_mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ALU_ACC_CTRL_SFPU_Fp32_enabled_MASK<sp/>|<sp/>ALU_ACC_CTRL_Fp32_enabled_MASK;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_payload.f.ALU_ACC_CTRL_Fp32_enabled<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fp32_dest_acc_en;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_payload.f.ALU_ACC_CTRL_SFPU_Fp32_enabled<sp/>=<sp/>fp32_dest_acc_en;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>alu_stoch_rnd_mask<sp/>=<sp/>ALU_ROUNDING_MODE_Fpu_srnd_en_MASK<sp/>|<sp/>ALU_ROUNDING_MODE_Gasket_srnd_en_MASK<sp/>|<sp/>ALU_ROUNDING_MODE_Packer_srnd_en_MASK;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_payload.f.ALU_ROUNDING_MODE_Fpu_srnd_en<sp/><sp/><sp/><sp/>=<sp/>fpu_srnd_en;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_payload.f.ALU_ROUNDING_MODE_Gasket_srnd_en<sp/>=<sp/>pack_srnd_en;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_payload.f.ALU_ROUNDING_MODE_Packer_srnd_en<sp/>=<sp/>pack_srnd_en;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>alu_mask<sp/>=<sp/>alu_format_mask<sp/>|<sp/>alu_dest_format_mask<sp/>|<sp/>alu_stoch_rnd_mask;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;ALU_FORMAT_SPEC_REG0_SrcA_ADDR32,<sp/>0,<sp/>alu_mask&gt;(alu_payload.val);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>src_zeroflags_disable<sp/>=<sp/>((uint)unpA_dst_format<sp/>==<sp/>(uint)DataFormat::UInt16)<sp/>||<sp/>((uint)unpB_dst_format<sp/>==<sp/>(uint)DataFormat::UInt16);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(disable_src_zero_flag)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_zeroflags_disable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;ALU_ACC_CTRL_Zero_Flag_disabled_src_RMW&gt;(src_zeroflags_disable);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1aa4b5dea8a9b89140f58f23f1f84e1619" kindref="member">t6_mutex_release</ref>(<ref refid="structckernel_1_1mutex_1a2e6185a2bb30d967f295a00e1661753d" kindref="member">mutex::REG_RMW</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>tile<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack_tile_descriptor_u<sp/>tile_descriptor;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceckernel_1_1unpacker_1a852bf48fc41cd1f9fc95ba0c5cb327c3" kindref="member">TILE_DESC_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_descriptor.val[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.in_data_format<sp/>=<sp/>(uint)unpA_src_format;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.uncompressed<sp/><sp/><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Input<sp/>tile<sp/>is<sp/>uncompressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.x_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>used<sp/>for<sp/>unpA<sp/>as<sp/>value<sp/>is<sp/>overriden<sp/>by<sp/>per<sp/>context<sp/>x_dim<sp/>set<sp/>below.<sp/>Used<sp/>for<sp/>unpB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.y_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.z_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unpA_num_faces;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tile_descriptor.f.blobs_per_xy_plane<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tile_descriptor.f.blobs_y_start<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceckernel_1_1unpacker_1a852bf48fc41cd1f9fc95ba0c5cb327c3" kindref="member">TILE_DESC_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg[THCON_SEC0_REG0_TileDescriptor_ADDR32<sp/>+<sp/>i]<sp/>=<sp/>tile_descriptor.val[i];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.in_data_format<sp/>=<sp/>row_pool<sp/>?<sp/>(uint)DataFormat::Float32<sp/>:<sp/>unpB_src_format;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.x_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unpB_face_r_dim<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.f.z_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unpB_num_faces;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceckernel_1_1unpacker_1a852bf48fc41cd1f9fc95ba0c5cb327c3" kindref="member">TILE_DESC_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg[THCON_SEC1_REG0_TileDescriptor_ADDR32<sp/>+<sp/>i]<sp/>=<sp/>tile_descriptor.val[i];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>unpacker<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack_config_u<sp/>config;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceckernel_1_1unpacker_1ad5954b3ef39d2586a634f51a038af643" kindref="member">CONFIG_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.val[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.out_data_format<sp/>=<sp/>unpA_dst_format;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.throttle_mode<sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.context_count<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.haloize_mode<sp/><sp/><sp/><sp/>=<sp/>transpose_xy_srca_en<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>config.f.upsample_rate<sp/><sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>config.f.upsamle_and_interlave<sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>config.f.shift_amount<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.uncompress_cntx0_3<sp/>=<sp/>0xf;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.uncompress_cntx4_7<sp/>=<sp/>0xf;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>config.f.limit_addr<sp/>=<sp/>0;<sp/>//<sp/>Set<sp/>dynamically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>config.f.fifo_size<sp/>=<sp/>0;<sp/>//<sp/>Set<sp/>dynamically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceckernel_1_1unpacker_1ad5954b3ef39d2586a634f51a038af643" kindref="member">CONFIG_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg[THCON_SEC0_REG2_Out_data_format_ADDR32<sp/>+<sp/>i]<sp/>=<sp/>config.val[i];</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.out_data_format<sp/>=<sp/>row_pool<sp/>?<sp/>((uint)DataFormat::Float16<sp/>|<sp/>(exp_width<sp/>&lt;&lt;<sp/>2))<sp/>:<sp/>unpB_dst_format;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>config.f.haloize_mode<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceckernel_1_1unpacker_1ad5954b3ef39d2586a634f51a038af643" kindref="member">CONFIG_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg[THCON_SEC1_REG2_Out_data_format_ADDR32<sp/>+<sp/>i]<sp/>=<sp/>config.val[i];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpA_x_end<sp/>=<sp/>(unpA_face_r_dim<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>(unpA_face_r_dim<sp/>&lt;&lt;<sp/>4)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aa624cd9d79108ba4e30706a474e471fb" kindref="member">TT_SETADCXX</ref>(<ref refid="structckernel_1_1p__setadc_1a89f4c22eb8b45e69b00fbf8d5d49986a" kindref="member">p_setadc::UNP_A</ref>,<sp/>unpA_x_end,<sp/>0x0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aa624cd9d79108ba4e30706a474e471fb" kindref="member">TT_SETADCXX</ref>(<ref refid="structckernel_1_1p__setadc_1abdfa1272eba8253f59d6f706b200c25e" kindref="member">p_setadc::UNP_B</ref>,<sp/>(unpB_face_r_dim<sp/>&lt;&lt;<sp/>4)<sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Program<sp/>base<sp/>address<sp/>for<sp/>all<sp/>2<sp/>sections<sp/>(each<sp/>section<sp/>address<sp/>is<sp/>loaded<sp/>to<sp/>corresponding<sp/>context)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>dummy<sp/>data<sp/>to<sp/>unused<sp/>location<sp/>if<sp/>face<sp/>height<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>Dest_cntx0_address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unpA_face_r_dim<sp/>==<sp/>0<sp/>?<sp/>22<sp/>*<sp/>16<sp/>:<sp/>4<sp/>*<sp/>16;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>Dest_cntx1_address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unpA_face_r_dim<sp/>==<sp/>0<sp/>?<sp/>22<sp/>*<sp/>16<sp/>:<sp/>4<sp/>*<sp/>16;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg[THCON_SEC0_REG5_Dest_cntx0_address_ADDR32]<sp/>=<sp/>Dest_cntx0_address<sp/>|<sp/>(Dest_cntx1_address<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Program<sp/>unpacker0<sp/>per<sp/>context<sp/>x_dim<sp/>(face<sp/>size<sp/>in<sp/>l1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overrides<sp/>value<sp/>set<sp/>by<sp/>tile<sp/>descriptor<sp/>when<sp/>thread<sp/>override<sp/>bit<sp/>is<sp/>set<sp/>in<sp/>unpack<sp/>instruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>face_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unpA_face_r_dim<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg[THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32]<sp/>=<sp/>face_dim<sp/>|<sp/>(face_dim<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>uint<sp/>face_dim_16x16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref><sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a3f6d31c656c971439380a96d145e8905" kindref="member">regfile</ref>[<ref refid="structckernel_1_1p__gpr__unpack_1a984cbf5271df6a297d0c32b2e0e6651d" kindref="member">p_gpr_unpack::FACE_DIM_16x16</ref>]<sp/>=<sp/>(face_dim_16x16<sp/>/<sp/>1)<sp/>|<sp/>((face_dim_16x16<sp/>/<sp/>1)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a3f6d31c656c971439380a96d145e8905" kindref="member">regfile</ref>[<ref refid="structckernel_1_1p__gpr__unpack_1a1f01f69f614d481b55336cbcb6f61795" kindref="member">p_gpr_unpack::FACE_DIM_8x16</ref>]<sp/><sp/>=<sp/>(face_dim_16x16<sp/>/<sp/>2)<sp/>|<sp/>((face_dim_16x16<sp/>/<sp/>2)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a3f6d31c656c971439380a96d145e8905" kindref="member">regfile</ref>[<ref refid="structckernel_1_1p__gpr__unpack_1a5609b41906e458d0f0e197830d0644d7" kindref="member">p_gpr_unpack::FACE_DIM_4x16</ref>]<sp/><sp/>=<sp/>(face_dim_16x16<sp/>/<sp/>4)<sp/>|<sp/>((face_dim_16x16<sp/>/<sp/>4)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a3f6d31c656c971439380a96d145e8905" kindref="member">regfile</ref>[<ref refid="structckernel_1_1p__gpr__unpack_1a73868b9229c83366bffc7cd6bec1cc72" kindref="member">p_gpr_unpack::FACE_DIM_2x16</ref>]<sp/><sp/>=<sp/>(face_dim_16x16<sp/>/<sp/>8)<sp/>|<sp/>((face_dim_16x16<sp/>/<sp/>8)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1a3f6d31c656c971439380a96d145e8905" kindref="member">regfile</ref>[<ref refid="structckernel_1_1p__gpr__unpack_1a78c8b3170214002b17bd9eaf4dcf9daa" kindref="member">p_gpr_unpack::FACE_DIM_1x16</ref>]<sp/><sp/>=<sp/>(face_dim_16x16<sp/>/<sp/>16)<sp/>|<sp/>((face_dim_16x16<sp/>/<sp/>16)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1ae28791bdad3fe51b7b31baa15bce41b8" kindref="member">sync_regfile_write</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a78c8b3170214002b17bd9eaf4dcf9daa" kindref="member">p_gpr_unpack::FACE_DIM_1x16</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(SRCA_SET_Base_ADDR32,<sp/>0x4);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>address<sp/>counter<sp/>for<sp/>unpacker<sp/>ch1/dst<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>final<sp/>address<sp/>is<sp/>calculated<sp/>as:<sp/>Dest_cntx0/1_address<sp/>+<sp/>address_counter_ch1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>face<sp/>by<sp/>face<sp/>unpacking<sp/>of<sp/>entire<sp/>tile<sp/>into<sp/>srcA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg[UNP0_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_ADDR32]<sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>UNP0_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_SHAMT;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Workaround<sp/>for<sp/>HW<sp/>bug<sp/>(fp32<sp/>dest<sp/>and<sp/>movd2a/b<sp/>is<sp/>used<sp/>with<sp/>srcA/B<sp/>configured<sp/>with<sp/>5-bit<sp/>exponent)</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(is_fp32_dest_acc_en<sp/>&amp;&amp;<sp/>(exp_width<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_write(RISCV_DEBUG_REG_DBG_FEATURE_DISABLE,<sp/>1&lt;&lt;11);<sp/>//<sp/>Set<sp/>debug<sp/>feature<sp/>disable<sp/>bit<sp/>11</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>workaround<sp/>for<sp/>bug<sp/>tenstorrent/budabackend#1372</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>HW<sp/>bug<sp/>(int32<sp/>dest<sp/>and<sp/>movd2a/b<sp/>is<sp/>used<sp/>with<sp/>srcA/B<sp/>configured<sp/>as<sp/>int8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int8_math_enabled<sp/>||<sp/>(fp32_dest_acc_en<sp/>&amp;&amp;<sp/>((uint)unpA_dst_format<sp/>==<sp/>(uint)DataFormat::UInt16)))</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1aa6ecc90070a247f2f78af7b08942dcea" kindref="member">reg_write</ref>(RISCV_DEBUG_REG_DBG_FEATURE_DISABLE,<sp/>1<sp/>&lt;&lt;<sp/>11);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>debug<sp/>feature<sp/>disable<sp/>bit<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>workaround<sp/>for<sp/>bug<sp/>tenstorrent/budabackend#1948</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>context<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1_1unpacker_1a8b5c8845e7511cc758476b70631ca0fa" kindref="member">reset_config_context</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>UNP_</highlight><highlight class="keywordtype">SEL</highlight><highlight class="normal"><sp/>=<sp/>p_setadc::UNP_AB&gt;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1ae10a2c3c6eee080f92ec0640e4051633" kindref="member">config_unpacker_x_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>face_r_dim)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(face_r_dim)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a37087d7f9d32a02c0708d252d06d872d" kindref="member">TTI_SETADCXX</ref>(UNP_SEL,<sp/>1<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a37087d7f9d32a02c0708d252d06d872d" kindref="member">TTI_SETADCXX</ref>(UNP_SEL,<sp/>2<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a37087d7f9d32a02c0708d252d06d872d" kindref="member">TTI_SETADCXX</ref>(UNP_SEL,<sp/>4<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a37087d7f9d32a02c0708d252d06d872d" kindref="member">TTI_SETADCXX</ref>(UNP_SEL,<sp/>8<sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a37087d7f9d32a02c0708d252d06d872d" kindref="member">TTI_SETADCXX</ref>(UNP_SEL,<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref><sp/>*<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>-<sp/>1,<sp/>0x0);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>INSERT_FENCE<sp/>=<sp/>false,<sp/>std::u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>UNP_</highlight><highlight class="keywordtype">SEL</highlight><highlight class="normal"><sp/>=<sp/>p_setadc::UNP_AB&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a15c5878a2c0819ecb7438ed0c0986f7c" kindref="member">config_unpacker_0_face_dim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>face_r_dim)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tile<sp/>x<sp/>dim<sp/>registers<sp/>are<sp/>only<sp/>for<sp/>unpacker<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(UNP_SEL<sp/>!=<sp/><ref refid="structckernel_1_1p__setadc_1abdfa1272eba8253f59d6f706b200c25e" kindref="member">p_setadc::UNP_B</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5e93e576b2f490f899e1e9c33cd13d22" kindref="member">TTI_STALLWAIT</ref>(<ref refid="structckernel_1_1p__stall_1ae8da566058238bcfeeed38eb0b8a8de3" kindref="member">p_stall::STALL_THCON</ref>,<sp/><ref refid="structckernel_1_1p__stall_1ae2b1b1da63b605e04696e7aa39bd4c67" kindref="member">p_stall::UNPACK0</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(face_r_dim)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5708986d443de62a46b72d774047b3a3" kindref="member">TTI_REG2FLOP</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32<sp/>-<sp/>THCON_CFGREG_BASE_ADDR32,<sp/><ref refid="structckernel_1_1p__gpr__unpack_1a78c8b3170214002b17bd9eaf4dcf9daa" kindref="member">p_gpr_unpack::FACE_DIM_1x16</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5708986d443de62a46b72d774047b3a3" kindref="member">TTI_REG2FLOP</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32<sp/>-<sp/>THCON_CFGREG_BASE_ADDR32,<sp/><ref refid="structckernel_1_1p__gpr__unpack_1a73868b9229c83366bffc7cd6bec1cc72" kindref="member">p_gpr_unpack::FACE_DIM_2x16</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5708986d443de62a46b72d774047b3a3" kindref="member">TTI_REG2FLOP</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32<sp/>-<sp/>THCON_CFGREG_BASE_ADDR32,<sp/><ref refid="structckernel_1_1p__gpr__unpack_1a5609b41906e458d0f0e197830d0644d7" kindref="member">p_gpr_unpack::FACE_DIM_4x16</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5708986d443de62a46b72d774047b3a3" kindref="member">TTI_REG2FLOP</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32<sp/>-<sp/>THCON_CFGREG_BASE_ADDR32,<sp/><ref refid="structckernel_1_1p__gpr__unpack_1a1f01f69f614d481b55336cbcb6f61795" kindref="member">p_gpr_unpack::FACE_DIM_8x16</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a5708986d443de62a46b72d774047b3a3" kindref="member">TTI_REG2FLOP</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32<sp/>-<sp/>THCON_CFGREG_BASE_ADDR32,<sp/><ref refid="structckernel_1_1p__gpr__unpack_1a984cbf5271df6a297d0c32b2e0e6651d" kindref="member">p_gpr_unpack::FACE_DIM_16x16</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(INSERT_FENCE)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a4dd82d1dee7a141307a3101ecd7841f5" kindref="member">TTI_DMANOP</ref>;<sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>fence<sp/>if<sp/>reg2flop<sp/>is<sp/>followed<sp/>by<sp/>an<sp/>unpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a5603f8753ae0d5df57d79ebb80cbdf1c" kindref="member">is_32bit_input</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>unpack_src_format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uint32_t<sp/>unpack_dst_format)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>input_df<sp/><sp/>=<sp/>unpack_src_format<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>output_df<sp/>=<sp/>unpack_dst_format<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((input_df<sp/>==<sp/>(uint)DataFormat::Int32)<sp/>||<sp/>(input_df<sp/>==<sp/>(uint)DataFormat::Float32))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((output_df<sp/>==<sp/>(uint)DataFormat::Int32)<sp/>||<sp/>(output_df<sp/>==<sp/>(uint)DataFormat::Float32));</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a5938c0573ddffddd7a583aa0aab04224" kindref="member">wait_for_dest_available</ref>()</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>t6_semaphore_wait_on_max&lt;p_stall::UNPACK&gt;(<ref refid="structckernel_1_1semaphore_1af449588e824d60c3ead92e96529fdf1e" kindref="member">semaphore::UNPACK_TO_DEST</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a19d9324285dbd9e512f3c5f403448757" kindref="member">unpack_to_dest_tile_done</ref>(uint<sp/>&amp;context_id)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>t6_semaphore_post&lt;p_stall::UNPACK0&gt;(<ref refid="structckernel_1_1semaphore_1af449588e824d60c3ead92e96529fdf1e" kindref="member">semaphore::UNPACK_TO_DEST</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a2887af75d878e3d9b72b89c192639ed3" kindref="member">p_gpr_unpack::UNPACK_STRIDE</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>UNP0_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32);<sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>unpack<sp/>stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>config<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context_id<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG2_Unpack_if_sel_cntx0_RMW&gt;(0);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG5_Dest_cntx0_address_RMW&gt;(4<sp/>*<sp/>16);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG2_Unpack_if_sel_cntx1_RMW&gt;(0);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG5_Dest_cntx1_address_RMW&gt;(4<sp/>*<sp/>16);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(SRCA_SET_Base_ADDR32,<sp/>0x4);<sp/></highlight><highlight class="comment">//<sp/>re-enable<sp/>address<sp/>bit<sp/>swizzle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1unpacker_1a729cc5b2eb6ba464bb7fe3a7984d8ef7" kindref="member">set_dst_write_addr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;context_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>&amp;unpack_dst_format)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dst_byte_addr<sp/>=<sp/>16<sp/>*<sp/>(4<sp/>+<sp/><ref refid="namespaceckernel_1a8b4271352cb5f8871d4ea8844b08cf54" kindref="member">mailbox_read</ref>(<ref refid="namespaceckernel_1af750c33d255a467519fada83802ecd39a079f554139a19db0776aed7316dfa903" kindref="member">ThreadId::MathThreadId</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>fixed<sp/>offset<sp/>of<sp/>4*16<sp/>to<sp/>dest<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1aefdf36a2f28e581b63a360bef288fecb" kindref="member">TTI_SETC16</ref>(SRCA_SET_Base_ADDR32,<sp/>0x0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>address<sp/>bit<sp/>swizzle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1af965da40461fb7248f9ed5cf708e6c6c" kindref="member">TTI_RDCFG</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a2887af75d878e3d9b72b89c192639ed3" kindref="member">p_gpr_unpack::UNPACK_STRIDE</ref>,<sp/>UNP0_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32);<sp/></highlight><highlight class="comment">//<sp/>Save<sp/>current<sp/>stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpA_ch1_x_stride<sp/>=<sp/>(uint)(unpack_dst_format<sp/>&amp;<sp/>0x3)<sp/>==<sp/>(uint)DataFormat::Float32<sp/><sp/><sp/>?<sp/>4</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(uint)(unpack_dst_format<sp/>&amp;<sp/>0x3)<sp/>==<sp/>(uint)DataFormat::Float16<sp/>?<sp/>2</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>unpA_ch1_z_stride<sp/>=<sp/><ref refid="namespaceckernel_1a3f233953c7eb9ff380fe7f7f4ce0cef5" kindref="member">FACE_C_DIM</ref><sp/>*<sp/><ref refid="namespaceckernel_1a870ab66757137fb4b2a9e0ccc22a2d3c" kindref="member">FACE_R_DIM</ref><sp/>*<sp/>unpA_ch1_x_stride;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1ada10e7d8a7be1a4ecc2feb5ba33efb1c" kindref="member">TT_SETDMAREG</ref>(0,<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__defs_8h_1ac078c789c14b3457323aab60b0ebf214" kindref="member">LOWER_HALFWORD</ref>(unpA_ch1_z_stride<sp/>&lt;&lt;<sp/>UNP0_ADDR_CTRL_ZW_REG_1_Zstride_SHAMT),<sp/>0,<sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__defs_8h_1a0fcd79ea7df2880c1cc3cf49f861188c" kindref="member">LO_16</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a5783e35cc8b86083e75907d4ace99606" kindref="member">p_gpr_unpack::TMP_LO</ref>));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92e18886c7926a85bee236c12b673f8d" kindref="member">TTI_WRCFG</ref>(<ref refid="structckernel_1_1p__gpr__unpack_1a5783e35cc8b86083e75907d4ace99606" kindref="member">p_gpr_unpack::TMP_LO</ref>,<sp/><ref refid="structckernel_1_1p__cfg_1a5bd138766b507e537c54bc002c7021e1" kindref="member">p_cfg::WRCFG_32b</ref>,<sp/>UNP0_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>unpack<sp/>stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context_id<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG2_Unpack_if_sel_cntx0_RMW&gt;(1);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG5_Dest_cntx0_address_RMW&gt;(dst_byte_addr);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG2_Unpack_if_sel_cntx1_RMW&gt;(1);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_reg_rmw_tensix&lt;THCON_SEC0_REG5_Dest_cntx1_address_RMW&gt;(dst_byte_addr);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>READERS<sp/>FOR<sp/>STRUCTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>unpack_tile_descriptor_t<sp/><ref refid="namespaceckernel_1_1unpacker_1a8c43186b56187b59c10ae7f167e75706" kindref="member">read_unpack_tile_descriptor_helper</ref>(uint32_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack_tile_descriptor_u<sp/>tile_descriptor<sp/>=<sp/>{.val<sp/>=<sp/>0};</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.val[0]<sp/>=<sp/>cfg[reg_addr];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.val[1]<sp/>=<sp/>cfg[reg_addr<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.val[2]<sp/>=<sp/>cfg[reg_addr<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor.val[3]<sp/>=<sp/>cfg[reg_addr<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tile_descriptor.f;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::array&lt;unpack_tile_descriptor_t,<sp/>NUM_UNPACKERS&gt;<sp/><ref refid="namespaceckernel_1_1unpacker_1aced0dfa4d292d10e067c7acf621dade5" kindref="member">read_unpack_tile_descriptor</ref>()</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;unpack_tile_descriptor_t,<sp/>NUM_UNPACKERS&gt;<sp/>tile_descriptor_vec;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>pointer<sp/>to<sp/>registers<sp/>for<sp/>current<sp/>state<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg<sp/>=<sp/><ref refid="namespaceckernel_1a07f2f679f32de3ec88a11ef180abef27" kindref="member">get_cfg_pointer</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor_vec[0]<sp/>=<sp/><ref refid="namespaceckernel_1_1unpacker_1a8c43186b56187b59c10ae7f167e75706" kindref="member">read_unpack_tile_descriptor_helper</ref>(THCON_SEC0_REG0_TileDescriptor_ADDR32,<sp/>cfg);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>tile_descriptor_vec[1]<sp/>=<sp/><ref refid="namespaceckernel_1_1unpacker_1a8c43186b56187b59c10ae7f167e75706" kindref="member">read_unpack_tile_descriptor_helper</ref>(THCON_SEC1_REG0_TileDescriptor_ADDR32,<sp/>cfg);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tile_descriptor_vec;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>unpack_config_t<sp/><ref refid="namespaceckernel_1_1unpacker_1a4dd9ad611570cc646ad1a6688792003a" kindref="member">read_unpack_config_helper</ref>(uint32_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>unpack_config_u<sp/>config;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>config.val[0]<sp/>=<sp/>cfg[reg_addr];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>config.val[1]<sp/>=<sp/>cfg[reg_addr<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>config.val[2]<sp/>=<sp/>cfg[reg_addr<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>config.val[3]<sp/>=<sp/>cfg[reg_addr<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config.f;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::array&lt;unpack_config_t,<sp/>NUM_UNPACKERS&gt;<sp/><ref refid="namespaceckernel_1_1unpacker_1a65c91d62f702e8682ca2e04d770b2b1b" kindref="member">read_unpack_config</ref>()</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;unpack_config_t,<sp/>NUM_UNPACKERS&gt;<sp/>config_vec;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>pointer<sp/>to<sp/>registers<sp/>for<sp/>current<sp/>state<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg<sp/>=<sp/><ref refid="namespaceckernel_1a07f2f679f32de3ec88a11ef180abef27" kindref="member">get_cfg_pointer</ref>();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>config_vec[0]<sp/>=<sp/><ref refid="namespaceckernel_1_1unpacker_1a4dd9ad611570cc646ad1a6688792003a" kindref="member">read_unpack_config_helper</ref>(THCON_SEC0_REG2_Out_data_format_ADDR32,<sp/>cfg);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>config_vec[1]<sp/>=<sp/><ref refid="namespaceckernel_1_1unpacker_1a4dd9ad611570cc646ad1a6688792003a" kindref="member">read_unpack_config_helper</ref>(THCON_SEC1_REG2_Out_data_format_ADDR32,<sp/>cfg);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config_vec;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>alu_config_t<sp/><ref refid="namespaceckernel_1_1unpacker_1a169ea23bb8dedb71ac5cf57a517df055" kindref="member">read_alu_config</ref>()</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>alu_config_u<sp/>config;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint<sp/>tt_reg_ptr<sp/>*cfg<sp/>=<sp/><ref refid="namespaceckernel_1a07f2f679f32de3ec88a11ef180abef27" kindref="member">get_cfg_pointer</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>config.val<sp/>=<sp/>cfg[ALU_ROUNDING_MODE_Fpu_srnd_en_ADDR32];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config.f;</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ckernel::unpacker</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_llk_wormhole_b0/common/inc/cunpack_common.h"/>
  </compounddef>
</doxygen>
