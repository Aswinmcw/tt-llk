<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tt__llk__blackhole_2common_2inc_2sfpu_2ckernel__sfpu__dropout_8h" kind="file" language="C++">
    <compoundname>ckernel_sfpu_dropout.h</compoundname>
    <includes local="yes">ckernel_ops.h</includes>
    <includes local="yes">noc_nonblocking_api.h</includes>
    <includes local="yes">sfpi.h</includes>
    <includes local="yes">sfpi_fp16.h</includes>
    <includedby refid="tt__llk__blackhole_2common_2inc_2ckernel__sfpu_8h" local="yes">tt_llk_blackhole/common/inc/ckernel_sfpu.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>sfpi_fp16.h</label>
      </node>
      <node id="3">
        <label>noc_nonblocking_api.h</label>
      </node>
      <node id="1">
        <label>tt_llk_blackhole/common/inc/sfpu/ckernel_sfpu_dropout.h</label>
        <link refid="tt__llk__blackhole_2common_2inc_2sfpu_2ckernel__sfpu__dropout_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sfpi.h</label>
      </node>
      <node id="2">
        <label>ckernel_ops.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>tt_llk_blackhole/common/inc/ckernel_sfpu.h</label>
        <link refid="tt__llk__blackhole_2common_2inc_2ckernel__sfpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tt_llk_blackhole/common/inc/sfpu/ckernel_sfpu_dropout.h</label>
        <link refid="tt__llk__blackhole_2common_2inc_2sfpu_2ckernel__sfpu__dropout_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tt_llk_blackhole/common/inc/cmath_common.h</label>
        <link refid="tt__llk__blackhole_2common_2inc_2cmath__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tt_llk_blackhole/common/inc/ckernel_sfpi.h</label>
        <link refid="tt__llk__blackhole_2common_2inc_2ckernel__sfpi_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceckernel">ckernel</innernamespace>
    <innernamespace refid="namespaceckernel_1_1sfpu">ckernel::sfpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2025<sp/>Tenstorrent<sp/>AI<sp/>ULC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ckernel_ops.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;noc_nonblocking_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sfpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sfpi_fp16.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel" kindref="compound">ckernel</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sfpu</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>probability<sp/>should<sp/>be<sp/>between<sp/>0<sp/>-<sp/>INT_MAX<sp/>(signed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scale<sp/>should<sp/>be<sp/>binary<sp/>representation<sp/>of<sp/>a<sp/>float32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>APPROXIMATION_MODE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ITERATIONS&gt;</highlight></codeline>
<codeline lineno="20" refid="namespaceckernel_1_1sfpu_1adae839f1f42b4dd934770213819da84c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1sfpu_1adae839f1f42b4dd934770213819da84c" kindref="member">_calculate_dropout_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations,<sp/>uint<sp/>probability,<sp/>uint<sp/>scale)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SFPU<sp/>microcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a743cf6ce2dec634ae94d6a5ede97c996" kindref="member">TT_SFPLOADI</ref>(<ref refid="structckernel_1_1p__sfpu_1ab1d54f1a6f1987af99dc385eb2a0442d" kindref="member">p_sfpu::LREG1</ref>,<sp/>10,<sp/>scale<sp/>&amp;<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a743cf6ce2dec634ae94d6a5ede97c996" kindref="member">TT_SFPLOADI</ref>(<ref refid="structckernel_1_1p__sfpu_1ab1d54f1a6f1987af99dc385eb2a0442d" kindref="member">p_sfpu::LREG1</ref>,<sp/>8,<sp/>scale<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a743cf6ce2dec634ae94d6a5ede97c996" kindref="member">TT_SFPLOADI</ref>(<ref refid="structckernel_1_1p__sfpu_1adced8f3b9b5eb95ea39975bcd8e0bab7" kindref="member">p_sfpu::LREG2</ref>,<sp/>10,<sp/>probability<sp/>&amp;<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a743cf6ce2dec634ae94d6a5ede97c996" kindref="member">TT_SFPLOADI</ref>(<ref refid="structckernel_1_1p__sfpu_1adced8f3b9b5eb95ea39975bcd8e0bab7" kindref="member">p_sfpu::LREG2</ref>,<sp/>8,<sp/>probability<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>unroll<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>iterations;<sp/>d++)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dst_reg[0]<sp/>=<sp/>dst_reg[0]<sp/>*<sp/>s2vFloat16b(scale);</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a6c7eb5bdf85afb3e9b019018dbab4ea5" kindref="member">TTI_SFPLOAD</ref>(<ref refid="structckernel_1_1p__sfpu_1acab55b64504d9944b811e2fa792daeff" kindref="member">p_sfpu::LREG0</ref>,<sp/>0,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1af6a0b7d2c3f7053d7b4f355335210c4b" kindref="member">TTI_SFPMUL</ref>(<ref refid="structckernel_1_1p__sfpu_1acab55b64504d9944b811e2fa792daeff" kindref="member">p_sfpu::LREG0</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1ab1d54f1a6f1987af99dc385eb2a0442d" kindref="member">p_sfpu::LREG1</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1a86204b4489489621a036fd2565df8d1d" kindref="member">p_sfpu::LCONST_0</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1acab55b64504d9944b811e2fa792daeff" kindref="member">p_sfpu::LREG0</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instruction<sp/>SFPMOV<sp/>generates<sp/>a<sp/>uint32_t<sp/>pseudorandom<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>instr_mod1<sp/>=<sp/>8<sp/>and<sp/>lreg_c<sp/>=<sp/><sp/>9.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arguments:<sp/>(imm12_math,<sp/>lreg_c,<sp/>lreg_dest,<sp/>instr_mod1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unset<sp/>sign-bit<sp/>for<sp/>easy<sp/>comparison<sp/>with<sp/>probability</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a3b0f63c32f625898c6c8dbc3b50068b6" kindref="member">TTI_SFPMOV</ref>(0,<sp/>9,<sp/><ref refid="structckernel_1_1p__sfpu_1aa0f33c600e9cae536edfa02c17925bc4" kindref="member">p_sfpu::LREG3</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a148cc889d1bc12d425f2d3f9df542ef9" kindref="member">TTI_SFPSETSGN</ref>(0,<sp/><ref refid="structckernel_1_1p__sfpu_1aa0f33c600e9cae536edfa02c17925bc4" kindref="member">p_sfpu::LREG3</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1aa0f33c600e9cae536edfa02c17925bc4" kindref="member">p_sfpu::LREG3</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drop<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v_if<sp/>(rand<sp/>&lt;<sp/>probability)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>dst_reg[0]<sp/>=<sp/>vConst0;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a6ab713d0072f1b55e1314e727fdd6b38" kindref="member">TTI_SFPIADD</ref>(0,<sp/><ref refid="structckernel_1_1p__sfpu_1adced8f3b9b5eb95ea39975bcd8e0bab7" kindref="member">p_sfpu::LREG2</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1aa0f33c600e9cae536edfa02c17925bc4" kindref="member">p_sfpu::LREG3</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a3b0f63c32f625898c6c8dbc3b50068b6" kindref="member">TTI_SFPMOV</ref>(0,<sp/><ref refid="structckernel_1_1p__sfpu_1a86204b4489489621a036fd2565df8d1d" kindref="member">p_sfpu::LCONST_0</ref>,<sp/><ref refid="structckernel_1_1p__sfpu_1acab55b64504d9944b811e2fa792daeff" kindref="member">p_sfpu::LREG0</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a469a1d7825eb55e26a0c1088cef660c8" kindref="member">TTI_SFPENCC</ref>(0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tt__llk__blackhole_2common_2inc_2ckernel__ops_8h_1a92a42fa5f12ef7cf062939ab214a78bf" kindref="member">TTI_SFPSTORE</ref>(0,<sp/>0,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfpi::dst_reg++;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespaceckernel_1_1sfpu_1ad844141ea6f7f64655f3affd4804db09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1_1sfpu_1ad844141ea6f7f64655f3affd4804db09" kindref="member">_init_dropout_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>seed)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceckernel_1aef245bf1f3ad2c3098721dbfb0382b92" kindref="member">init_prng_seed</ref>(seed);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sfpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ckernel</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_llk_blackhole/common/inc/sfpu/ckernel_sfpu_dropout.h"/>
  </compounddef>
</doxygen>
